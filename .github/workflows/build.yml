name: Build


on:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

env:
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  HEROKU_APP_NAME: solvo-platform

jobs:
  build:
    name: "Build (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
    env:
      enableLocalPublishingTest: 'false'
      gradleArgs: --scan "-Dorg.gradle.jvmargs=-Xmx4096m" "-Dfile.encoding=UTF-8"
      isMac: ${{ startsWith(matrix.os, 'macos') }}
      isWindows: ${{ startsWith(matrix.os, 'windows') }}
      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}
      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Cache Gradle
        uses: pat-s/always-upload-cache@v3
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Maven
        uses: pat-s/always-upload-cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - if: ${{ env.isUnix == 'true' }}
        run: chmod -R +x *

      - name: Login to Heroku Registry
        if: ${{ env.GITHUB_REF_NAME }} == "main" || ${{ env.GITHUB_REF_NAME }} == "deploy-heroku"
        run: echo "$HEROKU_API_KEY" | docker login --username=him188@mamoe.net --password-stdin registry.heroku.com
      #
      #      - name: Login to Docker Hub
      #        uses: docker/login-action@v1
      #        with:
      #          username: him188@mamoe.net
      #          password: $HEROKU_API_KEY
      #          
      - name: Clean and download dependencies
        run: ./gradlew clean ${{ env.gradleArgs }}
      
      #      - name: Assemble
      #        run: ./gradlewÏ€ assemble ${{ env.gradleArgs }}
      #
      #      - name: Check
      #        run: ./gradlew check ${{ env.gradleArgs }}

      - name: Build Staging
        if: '${{ env.GITHUB_REF_NAME }} == "main" || ${{ env.GITHUB_REF_NAME }} == "deploy-heroku"'
        run: ./gradlew installDist ${{ env.gradleArgs }}

      - name: Remove build temp
        run: rm -rf ./build

      - name: Build Docker image
        run: docker build -t registry.heroku.com/$HEROKU_APP_NAME/web .

      - name: Push Docker image to Heroku Registry
        run: docker push registry.heroku.com/$HEROKU_APP_NAME/web

      - name: Release Docker image on Heroku
        run: |
          curl -n -X PATCH https://api.heroku.com/apps/$HEROKU_APP_NAME/formation \
          -d '{
            "updates": [
              {
                "type": "web",
                "docker_image": "registry.heroku.com/'$HEROKU_APP_NAME'/web"
              }
            ]
          }' \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $HEROKU_API_KEY" \
          -H "Accept: application/vnd.heroku+json; version=3.docker-releases"