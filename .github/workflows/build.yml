name: Build


on:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

env:
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  HEROKU_APP_NAME: solvo-platform
  deployStaging: ${{ env.GITHUB_REF_NAME }} == "main" || ${{ env.GITHUB_REF_NAME }} == "deploy-heroku"

jobs:
  build:
    name: "Build (${{ matrix.os }})"
    runs-on: ${{ matrix.os }}
    if: false
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-12
    env:
      enableLocalPublishingTest: 'false'
      gradleArgs: --scan "-Dorg.gradle.jvmargs=-Xmx4096m" "-Dfile.encoding=UTF-8"
      isMac: ${{ startsWith(matrix.os, 'macos') }}
      isWindows: ${{ startsWith(matrix.os, 'windows') }}
      isUbuntu: ${{ startsWith(matrix.os, 'ubuntu') }}
      isUnix: ${{ startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu') }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions/setup-java@v2
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Cache Gradle
        uses: pat-s/always-upload-cache@v3
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Maven
        uses: pat-s/always-upload-cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - if: ${{ env.isUnix == 'true' }}
        run: chmod -R +x *

      - name: Clean and download dependencies
        run: ./gradlew clean ${{ env.gradleArgs }}

      - name: Assemble
        run: ./gradlew assemble ${{ env.gradleArgs }}

      - name: Check
        run: ./gradlew check ${{ env.gradleArgs }}

      - name: Install
        run: ./gradlew installDist ${{ env.gradleArgs }}

      - run: rm -rf build
        if: $deployStaging == 'true'
      
      #        
      #  staging:
      #    #    needs: [ build ]
      #    name: "Staging"
      #    runs-on: ubuntu-latest
      #    if: ${{ env.GITHUB_REF_NAME }} == "main" || ${{ env.GITHUB_REF_NAME }} == "deploy-heroku"
      #    steps:
      #      - uses: actions/checkout@v3
      #        with:
      #          submodules: 'recursive'

      - name: Install Heroku
        if: $deployStaging == 'true'
        run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh

      - run: heroku container:login
        if: $deployStaging == 'true'

      - run: heroku container:push web --app $HEROKU_APP_NAME
        if: $deployStaging == 'true'

      - run: heroku container:release web --app $HEROKU_APP_NAME
        if: $deployStaging == 'true'
